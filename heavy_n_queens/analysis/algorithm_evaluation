--------------Trial------------------------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 6.0558319091796875e-05; Cost: 0; Heuristic_score: 0; Depth: 0; Effective_Branching: 0.0; Nodes_Processed: 0
Solution_Queens: [Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=0, heuristic=0, id=0, sorted_queens=((1, 1), (1, 3), (1, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa753551f90>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 2.4557113647460938e-05; Cost: 0; Heuristic_score: 0; Depth: 0; Effective_Branching: 0.0; Nodes_Processed: 0
Solution_Queens: [Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=0, heuristic=0, id=0, sorted_queens=((1, 1), (1, 3), (1, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa753551f90>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 3.933906555175781e-05; Cost: 0; Heuristic_score: 0; Depth: 0; Effective_Branching: 0.0; Nodes_Processed: 0
Solution_Queens: [Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=0, heuristic=0, id=0, sorted_queens=((1, 1), (1, 3), (1, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa753551f90>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 2.1219253540039062e-05; Cost: 0; Heuristic_score: 0; Depth: 0; Effective_Branching: 0.0; Nodes_Processed: 0
Solution_Queens: [Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=0, heuristic=0, id=0, sorted_queens=((1, 1), (1, 3), (1, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 1, Queen: 1; position: (4, 2); weight: 7, Queen: 2; position: (1, 3); weight: 3, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa753551f90>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 4.1473400592803955; Cost: 100; Heuristic_score: 0; Depth: 5; Effective_Branching: 3.3002265382047016; Nodes_Processed: 1292
Solution_Queens: [Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 4); weight: 5, Queen: 3; position: (2, 2); weight: 4, Queen: 2; position: (4, 1); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=100, heuristic=0, id=6, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 4); weight: 5, Queen: 3; position: (2, 2); weight: 4, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa74d1589d0>)
Move Number: 1: PrioritizedNode(cost=91, heuristic=3, id=4, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 2); weight: 3, Queen: 3; position: (2, 2); weight: 4, Queen: 1; position: (3, 4); weight: 5], board=<__main__.Board object at 0x7fa752269090>)
Move Number: 2: PrioritizedNode(cost=66, heuristic=3, id=5, sorted_queens=((2, 1), (3, 2), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 3; position: (2, 1); weight: 4, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa7518b2050>)
Move Number: 3: PrioritizedNode(cost=57, heuristic=4, id=2, sorted_queens=((2, 1), (3, 2), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 4); weight: 3, Queen: 3; position: (2, 1); weight: 4], board=<__main__.Board object at 0x7fa75226ea50>)
Move Number: 4: PrioritizedNode(cost=9, heuristic=3, id=1, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 3; position: (2, 4); weight: 4, Queen: 2; position: (4, 2); weight: 3], board=<__main__.Board object at 0x7fa7522b13d0>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=3, id=0, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 3)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa7522eb750>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.05458641052246094; Cost: 232; Heuristic_score: 0; Depth: 10; Effective_Branching: 1.3069239821127012; Nodes_Processed: 19
Solution_Queens: [Queen: 0; position: (4, 1); weight: 9, Queen: 3; position: (2, 2); weight: 4, Queen: 1; position: (3, 4); weight: 5, Queen: 2; position: (4, 1); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=232, heuristic=0, id=10, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 3; position: (2, 2); weight: 4, Queen: 1; position: (3, 4); weight: 5, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa74ab1b9d0>)
Move Number: 1: PrioritizedNode(cost=205, heuristic=3, id=9, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 4); weight: 3, Queen: 3; position: (2, 2); weight: 4, Queen: 1; position: (3, 4); weight: 5], board=<__main__.Board object at 0x7fa74ab1b6d0>)
Move Number: 2: PrioritizedNode(cost=180, heuristic=3, id=8, sorted_queens=((2, 2), (3, 3), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 4); weight: 3, Queen: 3; position: (2, 2); weight: 4, Queen: 1; position: (3, 3); weight: 5], board=<__main__.Board object at 0x7fa74aabf150>)
Move Number: 3: PrioritizedNode(cost=155, heuristic=3, id=7, sorted_queens=((2, 2), (3, 2), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 4); weight: 3, Queen: 3; position: (2, 2); weight: 4], board=<__main__.Board object at 0x7fa74aabfbd0>)
Move Number: 4: PrioritizedNode(cost=123, heuristic=3, id=6, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 3; position: (2, 4); weight: 4, Queen: 2; position: (4, 4); weight: 3], board=<__main__.Board object at 0x7fa74aabf850>)
Move Number: 5: PrioritizedNode(cost=105, heuristic=3, id=5, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 2); weight: 3, Queen: 3; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa74ab1b550>)
Move Number: 6: PrioritizedNode(cost=57, heuristic=3, id=4, sorted_queens=((2, 1), (3, 2), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 2); weight: 3, Queen: 3; position: (2, 1); weight: 4], board=<__main__.Board object at 0x7fa74ab1be10>)
Move Number: 7: PrioritizedNode(cost=41, heuristic=3, id=3, sorted_queens=((2, 2), (3, 2), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 2); weight: 3, Queen: 3; position: (2, 2); weight: 4], board=<__main__.Board object at 0x7fa74ab1bd50>)
Move Number: 8: PrioritizedNode(cost=25, heuristic=3, id=2, sorted_queens=((2, 3), (3, 2), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 3; position: (2, 3); weight: 4, Queen: 2; position: (4, 2); weight: 3], board=<__main__.Board object at 0x7fa74ab1b1d0>)
Move Number: 9: PrioritizedNode(cost=16, heuristic=3, id=1, sorted_queens=((2, 3), (3, 2), (4, 1), (4, 3)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 3); weight: 4], board=<__main__.Board object at 0x7fa74ab1b810>)
Move Number: 10: PrioritizedNode(cost=0, heuristic=3, id=0, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 3)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa7522eb750>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 4.114618301391602; Cost: 100; Heuristic_score: 0; Depth: 5; Effective_Branching: 3.3002265382047016; Nodes_Processed: 1292
Solution_Queens: [Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 4); weight: 5, Queen: 3; position: (2, 2); weight: 4, Queen: 2; position: (4, 1); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=100, heuristic=0, id=6, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 4); weight: 5, Queen: 3; position: (2, 2); weight: 4, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa74c08e950>)
Move Number: 1: PrioritizedNode(cost=91, heuristic=9, id=4, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 2); weight: 3, Queen: 3; position: (2, 2); weight: 4, Queen: 1; position: (3, 4); weight: 5], board=<__main__.Board object at 0x7fa750d2ad50>)
Move Number: 2: PrioritizedNode(cost=66, heuristic=75, id=5, sorted_queens=((2, 1), (3, 2), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 3; position: (2, 1); weight: 4, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa750d83f90>)
Move Number: 3: PrioritizedNode(cost=57, heuristic=57, id=2, sorted_queens=((2, 1), (3, 2), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 4); weight: 3, Queen: 3; position: (2, 1); weight: 4], board=<__main__.Board object at 0x7fa74aa66490>)
Move Number: 4: PrioritizedNode(cost=9, heuristic=43, id=1, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 2)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 3; position: (2, 4); weight: 4, Queen: 2; position: (4, 2); weight: 3], board=<__main__.Board object at 0x7fa74c315390>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=34, id=0, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 3)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa7522eb750>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.010985851287841797; Cost: 100; Heuristic_score: 0; Depth: 4; Effective_Branching: 1.3195079107728942; Nodes_Processed: 4
Solution_Queens: [Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 1); weight: 3, Queen: 1; position: (3, 4); weight: 5, Queen: 3; position: (2, 2); weight: 4]
Solution_Order: Move Number: 0: PrioritizedNode(cost=100, heuristic=0, id=4, sorted_queens=((2, 2), (3, 4), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 1); weight: 3, Queen: 1; position: (3, 4); weight: 5, Queen: 3; position: (2, 2); weight: 4], board=<__main__.Board object at 0x7fa761529fd0>)
Move Number: 1: PrioritizedNode(cost=68, heuristic=16, id=3, sorted_queens=((2, 4), (3, 4), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 3; position: (2, 4); weight: 4, Queen: 2; position: (4, 1); weight: 3, Queen: 1; position: (3, 4); weight: 5], board=<__main__.Board object at 0x7fa76104b450>)
Move Number: 2: PrioritizedNode(cost=43, heuristic=16, id=2, sorted_queens=((2, 4), (3, 3), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 3; position: (2, 4); weight: 4, Queen: 1; position: (3, 3); weight: 5, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa761529e10>)
Move Number: 3: PrioritizedNode(cost=25, heuristic=25, id=1, sorted_queens=((2, 4), (3, 3), (4, 1), (4, 3)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 4, Queen: 1; position: (3, 3); weight: 5], board=<__main__.Board object at 0x7fa75230a310>)
Move Number: 4: PrioritizedNode(cost=0, heuristic=34, id=0, sorted_queens=((2, 4), (3, 2), (4, 1), (4, 3)), queens=[Queen: 0; position: (4, 1); weight: 9, Queen: 1; position: (3, 2); weight: 5, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa7522eb750>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.9065289497375488; Cost: 100; Heuristic_score: 0; Depth: 4; Effective_Branching: 3.1476881267968886; Nodes_Processed: 309
Solution_Queens: [Queen: 0; position: (3, 1); weight: 7, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2, Queen: 1; position: (2, 4); weight: 4]
Solution_Order: Move Number: 0: PrioritizedNode(cost=100, heuristic=0, id=4, sorted_queens=((1, 2), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2, Queen: 1; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa74b5ffe10>)
Move Number: 1: PrioritizedNode(cost=84, heuristic=2, id=3, sorted_queens=((1, 2), (2, 1), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2, Queen: 1; position: (2, 1); weight: 4], board=<__main__.Board object at 0x7fa74faecd10>)
Move Number: 2: PrioritizedNode(cost=68, heuristic=4, id=2, sorted_queens=((1, 4), (2, 2), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 4); weight: 2, Queen: 3; position: (4, 3); weight: 8], board=<__main__.Board object at 0x7fa74aacab10>)
Move Number: 3: PrioritizedNode(cost=4, heuristic=2, id=1, sorted_queens=((1, 2), (2, 2), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (4, 4); weight: 8, Queen: 2; position: (1, 2); weight: 2], board=<__main__.Board object at 0x7fa74c08e910>)
Move Number: 4: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 4); weight: 8], board=<__main__.Board object at 0x7fa7524e7550>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.018921375274658203; Cost: 364; Heuristic_score: 0; Depth: 7; Effective_Branching: 1.2753731068584542; Nodes_Processed: 7
Solution_Queens: [Queen: 0; position: (3, 1); weight: 7, Queen: 2; position: (1, 2); weight: 2, Queen: 3; position: (4, 3); weight: 8, Queen: 1; position: (2, 4); weight: 4]
Solution_Order: Move Number: 0: PrioritizedNode(cost=364, heuristic=0, id=7, sorted_queens=((1, 2), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 2; position: (1, 2); weight: 2, Queen: 3; position: (4, 3); weight: 8, Queen: 1; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa761057590>)
Move Number: 1: PrioritizedNode(cost=332, heuristic=2, id=6, sorted_queens=((1, 2), (2, 2), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 2); weight: 2, Queen: 3; position: (4, 3); weight: 8], board=<__main__.Board object at 0x7fa7513e7e50>)
Move Number: 2: PrioritizedNode(cost=268, heuristic=2, id=5, sorted_queens=((1, 2), (2, 2), (3, 1), (4, 2)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (4, 2); weight: 8, Queen: 2; position: (1, 2); weight: 2], board=<__main__.Board object at 0x7fa7513e7f90>)
Move Number: 3: PrioritizedNode(cost=264, heuristic=2, id=4, sorted_queens=((1, 1), (2, 2), (3, 1), (4, 2)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (4, 2); weight: 8, Queen: 2; position: (1, 1); weight: 2], board=<__main__.Board object at 0x7fa7513e7690>)
Move Number: 4: PrioritizedNode(cost=256, heuristic=2, id=3, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 2)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 2); weight: 8], board=<__main__.Board object at 0x7fa7513e7810>)
Move Number: 5: PrioritizedNode(cost=192, heuristic=2, id=2, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 1)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 1); weight: 8], board=<__main__.Board object at 0x7fa7525dc290>)
Move Number: 6: PrioritizedNode(cost=64, heuristic=2, id=1, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 3); weight: 8], board=<__main__.Board object at 0x7fa752352c90>)
Move Number: 7: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 4); weight: 8], board=<__main__.Board object at 0x7fa7524e7550>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.9505982398986816; Cost: 100; Heuristic_score: 0; Depth: 4; Effective_Branching: 3.1476881267968886; Nodes_Processed: 309
Solution_Queens: [Queen: 0; position: (3, 1); weight: 7, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2, Queen: 1; position: (2, 4); weight: 4]
Solution_Order: Move Number: 0: PrioritizedNode(cost=100, heuristic=0, id=4, sorted_queens=((1, 2), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2, Queen: 1; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa7504cc910>)
Move Number: 1: PrioritizedNode(cost=84, heuristic=36, id=3, sorted_queens=((1, 2), (2, 1), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2, Queen: 1; position: (2, 1); weight: 4], board=<__main__.Board object at 0x7fa74e6fbf90>)
Move Number: 2: PrioritizedNode(cost=68, heuristic=16, id=2, sorted_queens=((1, 4), (2, 2), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 4); weight: 2, Queen: 3; position: (4, 3); weight: 8], board=<__main__.Board object at 0x7fa75140c450>)
Move Number: 3: PrioritizedNode(cost=4, heuristic=36, id=1, sorted_queens=((1, 2), (2, 2), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (4, 4); weight: 8, Queen: 2; position: (1, 2); weight: 2], board=<__main__.Board object at 0x7fa74b9d6390>)
Move Number: 4: PrioritizedNode(cost=0, heuristic=40, id=0, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 4); weight: 8], board=<__main__.Board object at 0x7fa7524e7550>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.02470684051513672; Cost: 100; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.6265765616977856; Nodes_Processed: 7
Solution_Queens: [Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 4); weight: 4, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=100, heuristic=0, id=3, sorted_queens=((1, 2), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 4); weight: 4, Queen: 3; position: (4, 3); weight: 8, Queen: 2; position: (1, 2); weight: 2], board=<__main__.Board object at 0x7fa7513e7950>)
Move Number: 1: PrioritizedNode(cost=96, heuristic=12, id=2, sorted_queens=((1, 3), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 2; position: (1, 3); weight: 2, Queen: 1; position: (2, 4); weight: 4, Queen: 3; position: (4, 3); weight: 8], board=<__main__.Board object at 0x7fa7513e7f90>)
Move Number: 2: PrioritizedNode(cost=32, heuristic=24, id=1, sorted_queens=((1, 3), (2, 4), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 4); weight: 8, Queen: 1; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7fa7513e7690>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=40, id=0, sorted_queens=((1, 3), (2, 2), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (1, 3); weight: 2, Queen: 3; position: (4, 4); weight: 8], board=<__main__.Board object at 0x7fa7524e7550>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.9630491733551025; Cost: 217; Heuristic_score: 0; Depth: 4; Effective_Branching: 3.1717650296502993; Nodes_Processed: 321
Solution_Queens: [Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 4); weight: 5, Queen: 3; position: (3, 1); weight: 8]
Solution_Order: Move Number: 0: PrioritizedNode(cost=217, heuristic=0, id=3, sorted_queens=((1, 2), (2, 4), (3, 1), (3, 1)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 4); weight: 5, Queen: 3; position: (3, 1); weight: 8], board=<__main__.Board object at 0x7fa74aaca710>)
Move Number: 1: PrioritizedNode(cost=89, heuristic=5, id=2, sorted_queens=((1, 2), (2, 2), (3, 1), (3, 3)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 3); weight: 8, Queen: 2; position: (2, 2); weight: 5], board=<__main__.Board object at 0x7fa74dfd0d50>)
Move Number: 2: PrioritizedNode(cost=50, heuristic=5, id=2, sorted_queens=((1, 2), (2, 1), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 4); weight: 8, Queen: 2; position: (2, 1); weight: 5], board=<__main__.Board object at 0x7fa7500afa50>)
Move Number: 3: PrioritizedNode(cost=25, heuristic=5, id=1, sorted_queens=((1, 2), (2, 4), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 4); weight: 8, Queen: 2; position: (2, 4); weight: 5], board=<__main__.Board object at 0x7fa7513e7cd0>)
Move Number: 4: PrioritizedNode(cost=0, heuristic=5, id=0, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 4); weight: 8], board=<__main__.Board object at 0x7fa76152b610>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.008230209350585938; Cost: 217; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 1); weight: 8, Queen: 2; position: (2, 4); weight: 5]
Solution_Order: Move Number: 0: PrioritizedNode(cost=217, heuristic=0, id=3, sorted_queens=((1, 2), (2, 4), (3, 1), (3, 1)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 1); weight: 8, Queen: 2; position: (2, 4); weight: 5], board=<__main__.Board object at 0x7fa7525d1fd0>)
Move Number: 1: PrioritizedNode(cost=192, heuristic=5, id=2, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 1)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 1); weight: 8], board=<__main__.Board object at 0x7fa753551f90>)
Move Number: 2: PrioritizedNode(cost=64, heuristic=5, id=1, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 3)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 3); weight: 8], board=<__main__.Board object at 0x7fa75f44b810>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=5, id=0, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 4); weight: 8], board=<__main__.Board object at 0x7fa76152b610>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.9640684127807617; Cost: 217; Heuristic_score: 0; Depth: 4; Effective_Branching: 3.1717650296502993; Nodes_Processed: 321
Solution_Queens: [Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 4); weight: 5, Queen: 3; position: (3, 1); weight: 8]
Solution_Order: Move Number: 0: PrioritizedNode(cost=217, heuristic=0, id=3, sorted_queens=((1, 2), (2, 4), (3, 1), (3, 1)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 4); weight: 5, Queen: 3; position: (3, 1); weight: 8], board=<__main__.Board object at 0x7fa75140ccd0>)
Move Number: 1: PrioritizedNode(cost=89, heuristic=75, id=2, sorted_queens=((1, 2), (2, 2), (3, 1), (3, 3)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 3); weight: 8, Queen: 2; position: (2, 2); weight: 5], board=<__main__.Board object at 0x7fa750a9dc90>)
Move Number: 2: PrioritizedNode(cost=50, heuristic=114, id=2, sorted_queens=((1, 2), (2, 1), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 4); weight: 8, Queen: 2; position: (2, 1); weight: 5], board=<__main__.Board object at 0x7fa74e64a610>)
Move Number: 3: PrioritizedNode(cost=25, heuristic=89, id=1, sorted_queens=((1, 2), (2, 4), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 4); weight: 8, Queen: 2; position: (2, 4); weight: 5], board=<__main__.Board object at 0x7fa74f876b50>)
Move Number: 4: PrioritizedNode(cost=0, heuristic=114, id=0, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 4); weight: 8], board=<__main__.Board object at 0x7fa76152b610>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.005684852600097656; Cost: 217; Heuristic_score: 0; Depth: 2; Effective_Branching: 1.2599210498948732; Nodes_Processed: 2
Solution_Queens: [Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 1); weight: 8, Queen: 2; position: (2, 4); weight: 5]
Solution_Order: Move Number: 0: PrioritizedNode(cost=217, heuristic=0, id=2, sorted_queens=((1, 2), (2, 4), (3, 1), (3, 1)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 3; position: (3, 1); weight: 8, Queen: 2; position: (2, 4); weight: 5], board=<__main__.Board object at 0x7fa753551f90>)
Move Number: 1: PrioritizedNode(cost=192, heuristic=25, id=1, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 1)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 1); weight: 8], board=<__main__.Board object at 0x7fa75230a310>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=114, id=0, sorted_queens=((1, 2), (2, 3), (3, 1), (3, 4)), queens=[Queen: 0; position: (3, 1); weight: 9, Queen: 1; position: (1, 2); weight: 9, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (3, 4); weight: 8], board=<__main__.Board object at 0x7fa76152b610>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.013939619064331055; Cost: 2; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.23606797749979; Nodes_Processed: 5
Solution_Queens: [Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7, Queen: 0; position: (4, 2); weight: 1, Queen: 1; position: (2, 1); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=2, heuristic=0, id=2, sorted_queens=((1, 3), (1, 4), (2, 1), (4, 2)), queens=[Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7, Queen: 0; position: (4, 2); weight: 1, Queen: 1; position: (2, 1); weight: 1], board=<__main__.Board object at 0x7fa74cb23c10>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 3), (1, 4), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa76104b450>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.021752357482910156; Cost: 744; Heuristic_score: 0; Depth: 8; Effective_Branching: 1.2599210498948732; Nodes_Processed: 8
Solution_Queens: [Queen: 0; position: (4, 1); weight: 1, Queen: 3; position: (1, 2); weight: 7, Queen: 2; position: (1, 2); weight: 8, Queen: 1; position: (2, 4); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=744, heuristic=0, id=8, sorted_queens=((1, 2), (1, 2), (2, 4), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 3; position: (1, 2); weight: 7, Queen: 2; position: (1, 2); weight: 8, Queen: 1; position: (2, 4); weight: 1], board=<__main__.Board object at 0x7fa74caafa10>)
Move Number: 1: PrioritizedNode(cost=742, heuristic=1, id=7, sorted_queens=((1, 2), (1, 2), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 3; position: (1, 2); weight: 7, Queen: 2; position: (1, 2); weight: 8], board=<__main__.Board object at 0x7fa74caadb10>)
Move Number: 2: PrioritizedNode(cost=678, heuristic=1, id=6, sorted_queens=((1, 2), (1, 3), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 3; position: (1, 2); weight: 7, Queen: 2; position: (1, 3); weight: 8], board=<__main__.Board object at 0x7fa761529cd0>)
Move Number: 3: PrioritizedNode(cost=550, heuristic=1, id=5, sorted_queens=((1, 2), (1, 1), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 3; position: (1, 2); weight: 7, Queen: 2; position: (1, 1); weight: 8], board=<__main__.Board object at 0x7fa761529090>)
Move Number: 4: PrioritizedNode(cost=358, heuristic=1, id=4, sorted_queens=((1, 2), (1, 4), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 3; position: (1, 2); weight: 7, Queen: 2; position: (1, 4); weight: 8], board=<__main__.Board object at 0x7fa752335fd0>)
Move Number: 5: PrioritizedNode(cost=294, heuristic=1, id=3, sorted_queens=((1, 3), (1, 2), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 2); weight: 7], board=<__main__.Board object at 0x7fa7525d1c90>)
Move Number: 6: PrioritizedNode(cost=245, heuristic=1, id=2, sorted_queens=((1, 3), (1, 3), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 3); weight: 7], board=<__main__.Board object at 0x7fa7522f3b10>)
Move Number: 7: PrioritizedNode(cost=147, heuristic=1, id=1, sorted_queens=((1, 3), (1, 1), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 1); weight: 7], board=<__main__.Board object at 0x7fa761057590>)
Move Number: 8: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 3), (1, 4), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa76104b450>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.014377832412719727; Cost: 2; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.23606797749979; Nodes_Processed: 5
Solution_Queens: [Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7, Queen: 0; position: (4, 2); weight: 1, Queen: 1; position: (2, 1); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=2, heuristic=0, id=2, sorted_queens=((1, 3), (1, 4), (2, 1), (4, 2)), queens=[Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7, Queen: 0; position: (4, 2); weight: 1, Queen: 1; position: (2, 1); weight: 1], board=<__main__.Board object at 0x7fa74f8767d0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 3), (1, 4), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa76104b450>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.008274078369140625; Cost: 53; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 3); weight: 7, Queen: 1; position: (2, 1); weight: 1, Queen: 0; position: (4, 4); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=53, heuristic=0, id=3, sorted_queens=((1, 3), (1, 3), (2, 1), (4, 4)), queens=[Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 3); weight: 7, Queen: 1; position: (2, 1); weight: 1, Queen: 0; position: (4, 4); weight: 1], board=<__main__.Board object at 0x7fa761529fd0>)
Move Number: 1: PrioritizedNode(cost=50, heuristic=1, id=2, sorted_queens=((1, 3), (1, 3), (2, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 3); weight: 7, Queen: 1; position: (2, 1); weight: 1], board=<__main__.Board object at 0x7fa7525d1fd0>)
Move Number: 2: PrioritizedNode(cost=49, heuristic=2, id=1, sorted_queens=((1, 3), (1, 3), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 3); weight: 7], board=<__main__.Board object at 0x7fa752309f90>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 3), (1, 4), (2, 2), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 1, Queen: 1; position: (2, 2); weight: 1, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (1, 4); weight: 7], board=<__main__.Board object at 0x7fa76104b450>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.3134791851043701; Cost: 64; Heuristic_score: 0; Depth: 1; Effective_Branching: 10.295630140987; Nodes_Processed: 106
Solution_Queens: [Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8]
Solution_Order: Move Number: 0: PrioritizedNode(cost=64, heuristic=0, id=1, sorted_queens=((1, 1), (2, 3), (2, 3), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8], board=<__main__.Board object at 0x7fa750a9d910>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=8, id=0, sorted_queens=((1, 1), (2, 3), (2, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 4); weight: 8], board=<__main__.Board object at 0x7fa7522eb750>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.0028133392333984375; Cost: 64; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8]
Solution_Order: Move Number: 0: PrioritizedNode(cost=64, heuristic=0, id=1, sorted_queens=((1, 1), (2, 3), (2, 3), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8], board=<__main__.Board object at 0x7fa7525d1fd0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=8, id=0, sorted_queens=((1, 1), (2, 3), (2, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 4); weight: 8], board=<__main__.Board object at 0x7fa7522eb750>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.3125157356262207; Cost: 64; Heuristic_score: 0; Depth: 1; Effective_Branching: 10.295630140987; Nodes_Processed: 106
Solution_Queens: [Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8]
Solution_Order: Move Number: 0: PrioritizedNode(cost=64, heuristic=0, id=1, sorted_queens=((1, 1), (2, 3), (2, 3), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8], board=<__main__.Board object at 0x7fa74cbabd10>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=16, id=0, sorted_queens=((1, 1), (2, 3), (2, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 4); weight: 8], board=<__main__.Board object at 0x7fa7522eb750>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.0028297901153564453; Cost: 64; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8]
Solution_Order: Move Number: 0: PrioritizedNode(cost=64, heuristic=0, id=1, sorted_queens=((1, 1), (2, 3), (2, 3), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 3); weight: 8], board=<__main__.Board object at 0x7fa7525d1fd0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=16, id=0, sorted_queens=((1, 1), (2, 3), (2, 4), (4, 2)), queens=[Queen: 0; position: (1, 1); weight: 2, Queen: 1; position: (4, 2); weight: 4, Queen: 2; position: (2, 3); weight: 9, Queen: 3; position: (2, 4); weight: 8], board=<__main__.Board object at 0x7fa7522eb750>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.08386659622192383; Cost: 18; Heuristic_score: 0; Depth: 2; Effective_Branching: 3.1072325059538586; Nodes_Processed: 30
Solution_Queens: [Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=18, heuristic=0, id=2, sorted_queens=((1, 3), (1, 3), (3, 2), (4, 4)), queens=[Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3], board=<__main__.Board object at 0x7fa7500a83d0>)
Move Number: 1: PrioritizedNode(cost=9, heuristic=2, id=1, sorted_queens=((1, 1), (1, 3), (3, 2), (4, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 3); weight: 3], board=<__main__.Board object at 0x7fa74caad0d0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=3, id=0, sorted_queens=((1, 1), (1, 3), (3, 2), (4, 4)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3], board=<__main__.Board object at 0x7fa75f444d10>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.0027337074279785156; Cost: 18; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=18, heuristic=0, id=1, sorted_queens=((1, 3), (1, 3), (3, 2), (4, 4)), queens=[Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3], board=<__main__.Board object at 0x7fa7525d1ed0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=3, id=0, sorted_queens=((1, 1), (1, 3), (3, 2), (4, 4)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3], board=<__main__.Board object at 0x7fa75f444d10>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.09407734870910645; Cost: 18; Heuristic_score: 0; Depth: 2; Effective_Branching: 3.1072325059538586; Nodes_Processed: 30
Solution_Queens: [Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=18, heuristic=0, id=2, sorted_queens=((1, 3), (1, 3), (3, 2), (4, 4)), queens=[Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3], board=<__main__.Board object at 0x7fa750034710>)
Move Number: 1: PrioritizedNode(cost=9, heuristic=13, id=1, sorted_queens=((1, 1), (1, 3), (3, 2), (4, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 3); weight: 3], board=<__main__.Board object at 0x7fa7500b85d0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=9, id=0, sorted_queens=((1, 1), (1, 3), (3, 2), (4, 4)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3], board=<__main__.Board object at 0x7fa75f444d10>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.0028634071350097656; Cost: 18; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=18, heuristic=0, id=1, sorted_queens=((1, 3), (1, 3), (3, 2), (4, 4)), queens=[Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3, Queen: 0; position: (1, 3); weight: 3], board=<__main__.Board object at 0x7fa7522f3590>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=9, id=0, sorted_queens=((1, 1), (1, 3), (3, 2), (4, 4)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (3, 2); weight: 2, Queen: 2; position: (1, 3); weight: 5, Queen: 3; position: (4, 4); weight: 3], board=<__main__.Board object at 0x7fa75f444d10>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.014114618301391602; Cost: 8; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.23606797749979; Nodes_Processed: 5
Solution_Queens: [Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 0; position: (2, 2); weight: 2, Queen: 1; position: (4, 3); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=8, heuristic=0, id=2, sorted_queens=((2, 4), (2, 2), (4, 3), (4, 3)), queens=[Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 0; position: (2, 2); weight: 2, Queen: 1; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7fa751d8cb50>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((2, 1), (2, 4), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3], board=<__main__.Board object at 0x7fa752352c90>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.008571863174438477; Cost: 36; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 3; position: (2, 1); weight: 3, Queen: 2; position: (4, 4); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=36, heuristic=0, id=3, sorted_queens=((2, 1), (2, 1), (4, 2), (4, 4)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 3; position: (2, 1); weight: 3, Queen: 2; position: (4, 4); weight: 3], board=<__main__.Board object at 0x7fa74f21cd50>)
Move Number: 1: PrioritizedNode(cost=27, heuristic=2, id=2, sorted_queens=((2, 1), (2, 1), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 1); weight: 3], board=<__main__.Board object at 0x7fa74f21c110>)
Move Number: 2: PrioritizedNode(cost=18, heuristic=2, id=1, sorted_queens=((2, 1), (2, 2), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 2); weight: 3], board=<__main__.Board object at 0x7fa761529cd0>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((2, 1), (2, 4), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3], board=<__main__.Board object at 0x7fa752352c90>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.014233112335205078; Cost: 8; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.23606797749979; Nodes_Processed: 5
Solution_Queens: [Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 0; position: (2, 2); weight: 2, Queen: 1; position: (4, 3); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=8, heuristic=0, id=2, sorted_queens=((2, 4), (2, 2), (4, 3), (4, 3)), queens=[Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 0; position: (2, 2); weight: 2, Queen: 1; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7fa74f249710>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=8, id=0, sorted_queens=((2, 1), (2, 4), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3], board=<__main__.Board object at 0x7fa752352c90>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.014350652694702148; Cost: 62; Heuristic_score: 0; Depth: 5; Effective_Branching: 1.3076604860118306; Nodes_Processed: 5
Solution_Queens: [Queen: 2; position: (4, 1); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 1; position: (4, 3); weight: 2, Queen: 0; position: (2, 2); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=62, heuristic=0, id=5, sorted_queens=((2, 4), (2, 2), (4, 1), (4, 3)), queens=[Queen: 2; position: (4, 1); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 1; position: (4, 3); weight: 2, Queen: 0; position: (2, 2); weight: 2], board=<__main__.Board object at 0x7fa7525d1fd0>)
Move Number: 1: PrioritizedNode(cost=58, heuristic=8, id=4, sorted_queens=((2, 1), (2, 4), (4, 1), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 2; position: (4, 1); weight: 3, Queen: 3; position: (2, 4); weight: 3, Queen: 1; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7fa74f22dc50>)
Move Number: 2: PrioritizedNode(cost=54, heuristic=8, id=3, sorted_queens=((2, 1), (2, 4), (4, 2), (4, 1)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 1); weight: 3, Queen: 3; position: (2, 4); weight: 3], board=<__main__.Board object at 0x7fa7525d1c90>)
Move Number: 3: PrioritizedNode(cost=36, heuristic=8, id=2, sorted_queens=((2, 1), (2, 2), (4, 2), (4, 1)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 3; position: (2, 2); weight: 3, Queen: 2; position: (4, 1); weight: 3], board=<__main__.Board object at 0x7fa7525d1ed0>)
Move Number: 4: PrioritizedNode(cost=18, heuristic=8, id=1, sorted_queens=((2, 1), (2, 2), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 2); weight: 3], board=<__main__.Board object at 0x7fa7525dc290>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=8, id=0, sorted_queens=((2, 1), (2, 4), (4, 2), (4, 3)), queens=[Queen: 0; position: (2, 1); weight: 2, Queen: 1; position: (4, 2); weight: 2, Queen: 2; position: (4, 3); weight: 3, Queen: 3; position: (2, 4); weight: 3], board=<__main__.Board object at 0x7fa752352c90>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.005715370178222656; Cost: 1; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.4142135623730951; Nodes_Processed: 2
Solution_Queens: [Queen: 0; position: (1, 1); weight: 8, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2, Queen: 1; position: (1, 1); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=1, heuristic=0, id=1, sorted_queens=((1, 1), (1, 1), (2, 3), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2, Queen: 1; position: (1, 1); weight: 1], board=<__main__.Board object at 0x7fa74f22d950>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 1), (1, 2), (2, 3), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2], board=<__main__.Board object at 0x7fa75230ae50>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.0028405189514160156; Cost: 36; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (2, 4); weight: 2, Queen: 2; position: (2, 4); weight: 6]
Solution_Order: Move Number: 0: PrioritizedNode(cost=36, heuristic=0, id=1, sorted_queens=((1, 1), (1, 2), (2, 4), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (2, 4); weight: 2, Queen: 2; position: (2, 4); weight: 6], board=<__main__.Board object at 0x7fa751d89a10>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 1), (1, 2), (2, 3), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2], board=<__main__.Board object at 0x7fa75230ae50>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.006340742111206055; Cost: 1; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.4142135623730951; Nodes_Processed: 2
Solution_Queens: [Queen: 0; position: (1, 1); weight: 8, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2, Queen: 1; position: (1, 1); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=1, heuristic=0, id=1, sorted_queens=((1, 1), (1, 1), (2, 3), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2, Queen: 1; position: (1, 1); weight: 1], board=<__main__.Board object at 0x7fa74d07f9d0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 1), (1, 2), (2, 3), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2], board=<__main__.Board object at 0x7fa75230ae50>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.0027658939361572266; Cost: 36; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (2, 4); weight: 2, Queen: 2; position: (2, 4); weight: 6]
Solution_Order: Move Number: 0: PrioritizedNode(cost=36, heuristic=0, id=1, sorted_queens=((1, 1), (1, 2), (2, 4), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (2, 4); weight: 2, Queen: 2; position: (2, 4); weight: 6], board=<__main__.Board object at 0x7fa7525d1c90>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 1), (1, 2), (2, 3), (2, 4)), queens=[Queen: 0; position: (1, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 2; position: (2, 3); weight: 6, Queen: 3; position: (2, 4); weight: 2], board=<__main__.Board object at 0x7fa75230ae50>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.011748790740966797; Cost: 12; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.0; Nodes_Processed: 4
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=12, heuristic=0, id=1, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7fa74f23e7d0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7fa75230a310>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 4; Runtime: 0.0027780532836914062; Cost: 12; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=12, heuristic=0, id=1, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7fa7522f3b10>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7fa75230a310>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.01174306869506836; Cost: 12; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.0; Nodes_Processed: 4
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=12, heuristic=0, id=1, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7fa74f22d690>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=4, id=0, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7fa75230a310>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 4; Runtime: 0.003272533416748047; Cost: 12; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=12, heuristic=0, id=1, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 1)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7fa7522eb750>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=4, id=0, sorted_queens=((1, 2), (3, 3), (4, 1), (4, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (1, 2); weight: 4, Queen: 2; position: (3, 3); weight: 7, Queen: 3; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7fa75230a310>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.07713794708251953; Cost: 10; Heuristic_score: 0; Depth: 2; Effective_Branching: 2.2239800905693152; Nodes_Processed: 11
Solution_Queens: [Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4, Queen: 1; position: (4, 1); weight: 1, Queen: 0; position: (1, 2); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=10, heuristic=0, id=2, sorted_queens=((1, 2), (2, 4), (2, 5), (4, 1), (5, 3)), queens=[Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4, Queen: 1; position: (4, 1); weight: 1, Queen: 0; position: (1, 2); weight: 3], board=<__main__.Board object at 0x7ff44ac76890>)
Move Number: 1: PrioritizedNode(cost=1, heuristic=1, id=1, sorted_queens=((1, 1), (2, 4), (2, 5), (4, 3), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4, Queen: 1; position: (4, 3); weight: 1], board=<__main__.Board object at 0x7ff44acf82d0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 1), (2, 4), (2, 5), (4, 2), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4], board=<__main__.Board object at 0x7ff457e8b4d0>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.013213634490966797; Cost: 19; Heuristic_score: 0; Depth: 2; Effective_Branching: 1.2599210498948732; Nodes_Processed: 2
Solution_Queens: [Queen: 0; position: (1, 1); weight: 3, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 4); weight: 4, Queen: 1; position: (4, 5); weight: 1]
Solution_Order: Move Number: 0: PrioritizedNode(cost=19, heuristic=0, id=2, sorted_queens=((1, 1), (2, 4), (2, 4), (4, 5), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 4); weight: 4, Queen: 1; position: (4, 5); weight: 1], board=<__main__.Board object at 0x7ff44acf8710>)
Move Number: 1: PrioritizedNode(cost=16, heuristic=1, id=1, sorted_queens=((1, 1), (2, 4), (2, 4), (4, 2), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 4); weight: 4], board=<__main__.Board object at 0x7ff44acf8750>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 1), (2, 4), (2, 5), (4, 2), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4], board=<__main__.Board object at 0x7ff457e8b4d0>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.07582640647888184; Cost: 10; Heuristic_score: 0; Depth: 2; Effective_Branching: 2.2239800905693152; Nodes_Processed: 11
Solution_Queens: [Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4, Queen: 1; position: (4, 1); weight: 1, Queen: 0; position: (1, 2); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=10, heuristic=0, id=2, sorted_queens=((1, 2), (2, 4), (2, 5), (4, 1), (5, 3)), queens=[Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4, Queen: 1; position: (4, 1); weight: 1, Queen: 0; position: (1, 2); weight: 3], board=<__main__.Board object at 0x7ff44ac9ead0>)
Move Number: 1: PrioritizedNode(cost=1, heuristic=2, id=1, sorted_queens=((1, 1), (2, 4), (2, 5), (4, 3), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4, Queen: 1; position: (4, 3); weight: 1], board=<__main__.Board object at 0x7ff44ac9b290>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 1), (2, 4), (2, 5), (4, 2), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4], board=<__main__.Board object at 0x7ff457e8b4d0>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.013258934020996094; Cost: 65; Heuristic_score: 0; Depth: 2; Effective_Branching: 1.2599210498948732; Nodes_Processed: 2
Solution_Queens: [Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 4; position: (2, 5); weight: 4, Queen: 3; position: (2, 5); weight: 4, Queen: 2; position: (5, 4); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=65, heuristic=0, id=2, sorted_queens=((1, 1), (2, 5), (2, 5), (4, 2), (5, 4)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 4; position: (2, 5); weight: 4, Queen: 3; position: (2, 5); weight: 4, Queen: 2; position: (5, 4); weight: 7], board=<__main__.Board object at 0x7ff457e8b610>)
Move Number: 1: PrioritizedNode(cost=16, heuristic=1, id=1, sorted_queens=((1, 1), (2, 5), (2, 5), (4, 2), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 2; position: (5, 3); weight: 7, Queen: 4; position: (2, 5); weight: 4, Queen: 3; position: (2, 5); weight: 4], board=<__main__.Board object at 0x7ff44acb6ad0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 1), (2, 4), (2, 5), (4, 2), (5, 3)), queens=[Queen: 0; position: (1, 1); weight: 3, Queen: 1; position: (4, 2); weight: 1, Queen: 2; position: (5, 3); weight: 7, Queen: 3; position: (2, 4); weight: 4, Queen: 4; position: (2, 5); weight: 4], board=<__main__.Board object at 0x7ff457e8b4d0>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.05481863021850586; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.8284271247461903; Nodes_Processed: 8
Solution_Queens: [Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((1, 2), (1, 4), (1, 4), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9], board=<__main__.Board object at 0x7ff44ac18410>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=9, id=0, sorted_queens=((1, 2), (1, 4), (1, 5), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 5); weight: 9], board=<__main__.Board object at 0x7ff457ea25d0>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.00661921501159668; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((1, 2), (1, 4), (1, 4), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9], board=<__main__.Board object at 0x7ff44ace78d0>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=9, id=0, sorted_queens=((1, 2), (1, 4), (1, 5), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 5); weight: 9], board=<__main__.Board object at 0x7ff457ea25d0>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.05688786506652832; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 2.8284271247461903; Nodes_Processed: 8
Solution_Queens: [Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((1, 2), (1, 4), (1, 4), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9], board=<__main__.Board object at 0x7ff44ac81410>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=81, id=0, sorted_queens=((1, 2), (1, 4), (1, 5), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 5); weight: 9], board=<__main__.Board object at 0x7ff457ea25d0>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.0067386627197265625; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((1, 2), (1, 4), (1, 4), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 4); weight: 9], board=<__main__.Board object at 0x7ff44acf8710>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=81, id=0, sorted_queens=((1, 2), (1, 4), (1, 5), (4, 3), (5, 1)), queens=[Queen: 0; position: (5, 1); weight: 9, Queen: 1; position: (1, 2); weight: 8, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (1, 4); weight: 9, Queen: 4; position: (1, 5); weight: 9], board=<__main__.Board object at 0x7ff457ea25d0>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 3.5562355518341064; Cost: 29; Heuristic_score: 0; Depth: 5; Effective_Branching: 2.783399161995236; Nodes_Processed: 465
Solution_Queens: [Queen: 0; position: (3, 1); weight: 6, Queen: 2; position: (2, 3); weight: 3, Queen: 1; position: (2, 3); weight: 4, Queen: 3; position: (1, 5); weight: 3, Queen: 4; position: (4, 4); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=29, heuristic=0, id=3, sorted_queens=((1, 5), (2, 3), (2, 3), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 2; position: (2, 3); weight: 3, Queen: 1; position: (2, 3); weight: 4, Queen: 3; position: (1, 5); weight: 3, Queen: 4; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7ff44793be90>)
Move Number: 1: PrioritizedNode(cost=25, heuristic=2, id=3, sorted_queens=((1, 4), (2, 2), (2, 4), (3, 1), (4, 1)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 2; position: (2, 4); weight: 3, Queen: 4; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7ff44965f810>)
Move Number: 2: PrioritizedNode(cost=21, heuristic=2, id=4, sorted_queens=((1, 3), (2, 2), (2, 3), (3, 1), (4, 2)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 3); weight: 3, Queen: 4; position: (4, 2); weight: 2], board=<__main__.Board object at 0x7ff44a349550>)
Move Number: 3: PrioritizedNode(cost=17, heuristic=3, id=2, sorted_queens=((1, 4), (2, 2), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 2; position: (2, 4); weight: 3, Queen: 4; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7ff44aafb210>)
Move Number: 4: PrioritizedNode(cost=8, heuristic=2, id=2, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7ff44ac60d50>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 5)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 5); weight: 2], board=<__main__.Board object at 0x7ff44ad2b710>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.05137014389038086; Cost: 107; Heuristic_score: 0; Depth: 7; Effective_Branching: 1.2753731068584542; Nodes_Processed: 7
Solution_Queens: [Queen: 0; position: (3, 1); weight: 6, Queen: 2; position: (2, 3); weight: 3, Queen: 4; position: (4, 4); weight: 2, Queen: 3; position: (1, 5); weight: 3, Queen: 1; position: (2, 3); weight: 4]
Solution_Order: Move Number: 0: PrioritizedNode(cost=107, heuristic=0, id=7, sorted_queens=((1, 5), (2, 3), (2, 3), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 2; position: (2, 3); weight: 3, Queen: 4; position: (4, 4); weight: 2, Queen: 3; position: (1, 5); weight: 3, Queen: 1; position: (2, 3); weight: 4], board=<__main__.Board object at 0x7ff448d38210>)
Move Number: 1: PrioritizedNode(cost=91, heuristic=2, id=6, sorted_queens=((1, 5), (2, 2), (2, 3), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 4; position: (4, 4); weight: 2, Queen: 3; position: (1, 5); weight: 3], board=<__main__.Board object at 0x7ff448d38090>)
Move Number: 2: PrioritizedNode(cost=55, heuristic=2, id=5, sorted_queens=((1, 1), (2, 2), (2, 3), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 4; position: (4, 4); weight: 2, Queen: 3; position: (1, 1); weight: 3], board=<__main__.Board object at 0x7ff4479f8e10>)
Move Number: 3: PrioritizedNode(cost=28, heuristic=2, id=4, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7ff4479f8e90>)
Move Number: 4: PrioritizedNode(cost=24, heuristic=2, id=3, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7ff44ad4a310>)
Move Number: 5: PrioritizedNode(cost=20, heuristic=2, id=2, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 2)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 2); weight: 2], board=<__main__.Board object at 0x7ff44b011f50>)
Move Number: 6: PrioritizedNode(cost=16, heuristic=2, id=1, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 1)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7ff44c19c5d0>)
Move Number: 7: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 5)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 5); weight: 2], board=<__main__.Board object at 0x7ff44ad2b710>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 3.680048942565918; Cost: 29; Heuristic_score: 0; Depth: 5; Effective_Branching: 2.783399161995236; Nodes_Processed: 465
Solution_Queens: [Queen: 0; position: (3, 1); weight: 6, Queen: 2; position: (2, 3); weight: 3, Queen: 1; position: (2, 3); weight: 4, Queen: 3; position: (1, 5); weight: 3, Queen: 4; position: (4, 4); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=29, heuristic=0, id=3, sorted_queens=((1, 5), (2, 3), (2, 3), (3, 1), (4, 4)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 2; position: (2, 3); weight: 3, Queen: 1; position: (2, 3); weight: 4, Queen: 3; position: (1, 5); weight: 3, Queen: 4; position: (4, 4); weight: 2], board=<__main__.Board object at 0x7ff448f92b50>)
Move Number: 1: PrioritizedNode(cost=25, heuristic=33, id=3, sorted_queens=((1, 4), (2, 2), (2, 4), (3, 1), (4, 1)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 2; position: (2, 4); weight: 3, Queen: 4; position: (4, 1); weight: 2], board=<__main__.Board object at 0x7ff447c333d0>)
Move Number: 2: PrioritizedNode(cost=21, heuristic=51, id=4, sorted_queens=((1, 3), (2, 2), (2, 3), (3, 1), (4, 2)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 3); weight: 3, Queen: 4; position: (4, 2); weight: 2], board=<__main__.Board object at 0x7ff44abac8d0>)
Move Number: 3: PrioritizedNode(cost=17, heuristic=25, id=2, sorted_queens=((1, 4), (2, 2), (2, 4), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 2; position: (2, 4); weight: 3, Queen: 4; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7ff446664650>)
Move Number: 4: PrioritizedNode(cost=8, heuristic=29, id=2, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 3)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7ff448d52110>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=29, id=0, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 5)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 5); weight: 2], board=<__main__.Board object at 0x7ff44ad2b710>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.020197391510009766; Cost: 161; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 0; position: (3, 5); weight: 6, Queen: 2; position: (2, 2); weight: 3, Queen: 4; position: (4, 3); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=161, heuristic=0, id=3, sorted_queens=((1, 4), (2, 2), (2, 2), (3, 5), (4, 3)), queens=[Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 0; position: (3, 5); weight: 6, Queen: 2; position: (2, 2); weight: 3, Queen: 4; position: (4, 3); weight: 2], board=<__main__.Board object at 0x7ff44b011cd0>)
Move Number: 1: PrioritizedNode(cost=153, heuristic=4, id=2, sorted_queens=((1, 4), (2, 2), (2, 2), (3, 5), (4, 5)), queens=[Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 5); weight: 2, Queen: 0; position: (3, 5); weight: 6, Queen: 2; position: (2, 2); weight: 3], board=<__main__.Board object at 0x7ff459a8b490>)
Move Number: 2: PrioritizedNode(cost=144, heuristic=17, id=1, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 5), (4, 5)), queens=[Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 5); weight: 2, Queen: 0; position: (3, 5); weight: 6], board=<__main__.Board object at 0x7ff459a97850>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=29, id=0, sorted_queens=((1, 4), (2, 2), (2, 3), (3, 1), (4, 5)), queens=[Queen: 0; position: (3, 1); weight: 6, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (2, 3); weight: 3, Queen: 3; position: (1, 4); weight: 3, Queen: 4; position: (4, 5); weight: 2], board=<__main__.Board object at 0x7ff44ad2b710>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 1045.2248685359955; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 335.70224902434; Nodes_Processed: 112696
Solution_Queens: [Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((2, 1), (3, 3), (3, 3), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9], board=<__main__.Board object at 0x7ff448099990>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=7, id=0, sorted_queens=((2, 1), (3, 3), (3, 4), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (4, 5); weight: 7], board=<__main__.Board object at 0x7ff459f6c5d0>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.006705284118652344; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((2, 1), (3, 3), (3, 3), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9], board=<__main__.Board object at 0x7ff457ef6b10>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=7, id=0, sorted_queens=((2, 1), (3, 3), (3, 4), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (4, 5); weight: 7], board=<__main__.Board object at 0x7ff459f6c5d0>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 1073.1876454353333; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 335.70224902434; Nodes_Processed: 112696
Solution_Queens: [Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((2, 1), (3, 3), (3, 3), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9], board=<__main__.Board object at 0x7fefa97c5e50>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=65, id=0, sorted_queens=((2, 1), (3, 3), (3, 4), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (4, 5); weight: 7], board=<__main__.Board object at 0x7ff459f6c5d0>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.0068817138671875; Cost: 81; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9]
Solution_Order: Move Number: 0: PrioritizedNode(cost=81, heuristic=0, id=1, sorted_queens=((2, 1), (3, 3), (3, 3), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 4; position: (4, 5); weight: 7, Queen: 3; position: (3, 3); weight: 9], board=<__main__.Board object at 0x7ff44ad75390>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=65, id=0, sorted_queens=((2, 1), (3, 3), (3, 4), (4, 5), (5, 2)), queens=[Queen: 0; position: (2, 1); weight: 1, Queen: 1; position: (5, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (4, 5); weight: 7], board=<__main__.Board object at 0x7ff459f6c5d0>)

--------------Trial----------------
Algorithm: astar; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.07575750350952148; Cost: 5; Heuristic_score: 0; Depth: 2; Effective_Branching: 2.2239800905693152; Nodes_Processed: 11
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1, Queen: 3; position: (5, 3); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=5, heuristic=0, id=2, sorted_queens=((1, 5), (2, 2), (3, 4), (4, 1), (5, 3)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1, Queen: 3; position: (5, 3); weight: 2], board=<__main__.Board object at 0x7ff387973ad0>)
Move Number: 1: PrioritizedNode(cost=1, heuristic=1, id=1, sorted_queens=((1, 5), (2, 2), (3, 2), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 2); weight: 1], board=<__main__.Board object at 0x7ff44ad5ccd0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 5), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3], board=<__main__.Board object at 0x7ff44ad49f90>)


Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 5; Runtime: 0.033536672592163086; Cost: 129; Heuristic_score: 0; Depth: 5; Effective_Branching: 1.3076604860118306; Nodes_Processed: 5
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 2); weight: 3, Queen: 1; position: (2, 5); weight: 4]
Solution_Order: Move Number: 0: PrioritizedNode(cost=129, heuristic=0, id=5, sorted_queens=((1, 2), (2, 5), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 2); weight: 3, Queen: 1; position: (2, 5); weight: 4], board=<__main__.Board object at 0x7ff3645c0650>)
Move Number: 1: PrioritizedNode(cost=81, heuristic=1, id=4, sorted_queens=((1, 2), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 2); weight: 3], board=<__main__.Board object at 0x7ff3645c01d0>)
Move Number: 2: PrioritizedNode(cost=72, heuristic=1, id=3, sorted_queens=((1, 3), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 3); weight: 3], board=<__main__.Board object at 0x7ff44ad33590>)
Move Number: 3: PrioritizedNode(cost=63, heuristic=1, id=2, sorted_queens=((1, 4), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 4); weight: 3], board=<__main__.Board object at 0x7ff44b01b150>)
Move Number: 4: PrioritizedNode(cost=36, heuristic=1, id=1, sorted_queens=((1, 1), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 1); weight: 3], board=<__main__.Board object at 0x7ff44b01b110>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=1, id=0, sorted_queens=((1, 5), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3], board=<__main__.Board object at 0x7ff44ad49f90>)


Algorithm: astar; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.07801651954650879; Cost: 5; Heuristic_score: 0; Depth: 2; Effective_Branching: 2.2239800905693152; Nodes_Processed: 11
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1, Queen: 3; position: (5, 3); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=5, heuristic=0, id=2, sorted_queens=((1, 5), (2, 2), (3, 4), (4, 1), (5, 3)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1, Queen: 3; position: (5, 3); weight: 2], board=<__main__.Board object at 0x7ff364288b90>)
Move Number: 1: PrioritizedNode(cost=1, heuristic=3, id=1, sorted_queens=((1, 5), (2, 2), (3, 2), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 2); weight: 1], board=<__main__.Board object at 0x7ff40648e4d0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 5), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3], board=<__main__.Board object at 0x7ff44ad49f90>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 5; Runtime: 0.02178359031677246; Cost: 7; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1, Queen: 3; position: (5, 3); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=7, heuristic=0, id=3, sorted_queens=((1, 5), (2, 2), (3, 4), (4, 1), (5, 3)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1, Queen: 3; position: (5, 3); weight: 2], board=<__main__.Board object at 0x7ff44b01b0d0>)
Move Number: 1: PrioritizedNode(cost=3, heuristic=1, id=2, sorted_queens=((1, 5), (2, 2), (3, 4), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 4); weight: 1], board=<__main__.Board object at 0x7ff44ad33b10>)
Move Number: 2: PrioritizedNode(cost=2, heuristic=1, id=1, sorted_queens=((1, 5), (2, 2), (3, 5), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3, Queen: 2; position: (3, 5); weight: 1], board=<__main__.Board object at 0x7ff44ad33590>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=2, id=0, sorted_queens=((1, 5), (2, 2), (3, 3), (4, 1), (5, 4)), queens=[Queen: 0; position: (4, 1); weight: 7, Queen: 1; position: (2, 2); weight: 4, Queen: 2; position: (3, 3); weight: 1, Queen: 3; position: (5, 4); weight: 2, Queen: 4; position: (1, 5); weight: 3], board=<__main__.Board object at 0x7ff44ad49f90>)

