--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.171049356460571;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.1306600570678711; Cost: 54; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 3; position: (1, 4); weight: 7, Queen: 4; position: (7, 5); weight: 9, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (6, 7); weight: 6, Queen: 7; position: (1, 8); weight: 6, Queen: 1; position: (1, 6); weight: 3, Queen: 2; position: (5, 1); weight: 1, Queen: 0; position: (7, 5); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=54, heuristic=0, id=3, sorted_queens=((1, 4), (1, 6), (1, 8), (1, 6), (5, 1), (6, 7), (7, 5), (7, 5)), queens=[Queen: 3; position: (1, 4); weight: 7, Queen: 4; position: (7, 5); weight: 9, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (6, 7); weight: 6, Queen: 7; position: (1, 8); weight: 6, Queen: 1; position: (1, 6); weight: 3, Queen: 2; position: (5, 1); weight: 1, Queen: 0; position: (7, 5); weight: 2], board=<__main__.Board object at 0x7f05ff4d6390>)
Move Number: 1: PrioritizedNode(cost=38, heuristic=1, id=2, sorted_queens=((1, 4), (1, 6), (1, 8), (1, 6), (5, 1), (6, 7), (7, 1), (7, 5)), queens=[Queen: 0; position: (7, 1); weight: 2, Queen: 3; position: (1, 4); weight: 7, Queen: 4; position: (7, 5); weight: 9, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (6, 7); weight: 6, Queen: 7; position: (1, 8); weight: 6, Queen: 1; position: (1, 6); weight: 3, Queen: 2; position: (5, 1); weight: 1], board=<__main__.Board object at 0x7f05ff4fa0d0>)
Move Number: 2: PrioritizedNode(cost=36, heuristic=2, id=1, sorted_queens=((1, 4), (1, 6), (1, 8), (1, 6), (5, 3), (6, 7), (7, 1), (7, 5)), queens=[Queen: 0; position: (7, 1); weight: 2, Queen: 2; position: (5, 3); weight: 1, Queen: 3; position: (1, 4); weight: 7, Queen: 4; position: (7, 5); weight: 9, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (6, 7); weight: 6, Queen: 7; position: (1, 8); weight: 6, Queen: 1; position: (1, 6); weight: 3], board=<__main__.Board object at 0x7f05ff4faed0>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=11, id=0, sorted_queens=((1, 2), (1, 4), (1, 6), (1, 8), (5, 3), (6, 7), (7, 1), (7, 5)), queens=[Queen: 0; position: (7, 1); weight: 2, Queen: 1; position: (1, 2); weight: 3, Queen: 2; position: (5, 3); weight: 1, Queen: 3; position: (1, 4); weight: 7, Queen: 4; position: (7, 5); weight: 9, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (6, 7); weight: 6, Queen: 7; position: (1, 8); weight: 6], board=<__main__.Board object at 0x7f060c6c7910>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.218975305557251;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.08675384521484375; Cost: 152; Heuristic_score: 0; Depth: 2; Effective_Branching: 1.2599210498948732; Nodes_Processed: 2
Solution_Queens: [Queen: 0; position: (7, 1); weight: 9, Queen: 1; position: (2, 2); weight: 7, Queen: 2; position: (4, 3); weight: 8, Queen: 5; position: (4, 6); weight: 5, Queen: 6; position: (6, 7); weight: 8, Queen: 7; position: (4, 8); weight: 1, Queen: 3; position: (4, 8); weight: 6, Queen: 4; position: (6, 7); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=152, heuristic=0, id=2, sorted_queens=((2, 2), (4, 3), (4, 6), (4, 8), (4, 8), (6, 7), (6, 7), (7, 1)), queens=[Queen: 0; position: (7, 1); weight: 9, Queen: 1; position: (2, 2); weight: 7, Queen: 2; position: (4, 3); weight: 8, Queen: 5; position: (4, 6); weight: 5, Queen: 6; position: (6, 7); weight: 8, Queen: 7; position: (4, 8); weight: 1, Queen: 3; position: (4, 8); weight: 6, Queen: 4; position: (6, 7); weight: 2], board=<__main__.Board object at 0x7f05ff3d5a50>)
Move Number: 1: PrioritizedNode(cost=144, heuristic=4, id=1, sorted_queens=((2, 2), (4, 3), (4, 6), (4, 8), (4, 8), (6, 5), (6, 7), (7, 1)), queens=[Queen: 0; position: (7, 1); weight: 9, Queen: 1; position: (2, 2); weight: 7, Queen: 2; position: (4, 3); weight: 8, Queen: 4; position: (6, 5); weight: 2, Queen: 5; position: (4, 6); weight: 5, Queen: 6; position: (6, 7); weight: 8, Queen: 7; position: (4, 8); weight: 1, Queen: 3; position: (4, 8); weight: 6], board=<__main__.Board object at 0x7f05ff3d5510>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=76, id=0, sorted_queens=((2, 2), (4, 3), (4, 4), (4, 6), (4, 8), (6, 5), (6, 7), (7, 1)), queens=[Queen: 0; position: (7, 1); weight: 9, Queen: 1; position: (2, 2); weight: 7, Queen: 2; position: (4, 3); weight: 8, Queen: 3; position: (4, 4); weight: 6, Queen: 4; position: (6, 5); weight: 2, Queen: 5; position: (4, 6); weight: 5, Queen: 6; position: (6, 7); weight: 8, Queen: 7; position: (4, 8); weight: 1], board=<__main__.Board object at 0x7f05ff5264d0>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.451770782470703;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.09011149406433105; Cost: 429; Heuristic_score: 0; Depth: 2; Effective_Branching: 1.2599210498948732; Nodes_Processed: 2
Solution_Queens: [Queen: 1; position: (7, 2); weight: 1, Queen: 2; position: (7, 3); weight: 4, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (1, 5); weight: 4, Queen: 6; position: (5, 7); weight: 3, Queen: 7; position: (3, 8); weight: 4, Queen: 5; position: (4, 1); weight: 9, Queen: 0; position: (5, 7); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=429, heuristic=0, id=2, sorted_queens=((1, 5), (3, 4), (3, 8), (4, 1), (5, 7), (5, 7), (7, 2), (7, 3)), queens=[Queen: 1; position: (7, 2); weight: 1, Queen: 2; position: (7, 3); weight: 4, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (1, 5); weight: 4, Queen: 6; position: (5, 7); weight: 3, Queen: 7; position: (3, 8); weight: 4, Queen: 5; position: (4, 1); weight: 9, Queen: 0; position: (5, 7); weight: 2], board=<__main__.Board object at 0x7f05ff5291d0>)
Move Number: 1: PrioritizedNode(cost=405, heuristic=12, id=1, sorted_queens=((1, 5), (3, 4), (3, 8), (4, 1), (5, 1), (5, 7), (7, 2), (7, 3)), queens=[Queen: 0; position: (5, 1); weight: 2, Queen: 1; position: (7, 2); weight: 1, Queen: 2; position: (7, 3); weight: 4, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (1, 5); weight: 4, Queen: 6; position: (5, 7); weight: 3, Queen: 7; position: (3, 8); weight: 4, Queen: 5; position: (4, 1); weight: 9], board=<__main__.Board object at 0x7f05ff53b6d0>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=33, id=0, sorted_queens=((1, 5), (3, 4), (3, 8), (4, 6), (5, 1), (5, 7), (7, 2), (7, 3)), queens=[Queen: 0; position: (5, 1); weight: 2, Queen: 1; position: (7, 2); weight: 1, Queen: 2; position: (7, 3); weight: 4, Queen: 3; position: (3, 4); weight: 9, Queen: 4; position: (1, 5); weight: 4, Queen: 5; position: (4, 6); weight: 9, Queen: 6; position: (5, 7); weight: 3, Queen: 7; position: (3, 8); weight: 4], board=<__main__.Board object at 0x7f05ff597bd0>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: True; Number of queens: 8; Runtime: 0.044560909271240234; Cost: 147; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (2, 1); weight: 4, Queen: 1; position: (7, 2); weight: 5, Queen: 3; position: (7, 4); weight: 9, Queen: 4; position: (7, 5); weight: 7, Queen: 5; position: (4, 6); weight: 7, Queen: 6; position: (7, 7); weight: 4, Queen: 7; position: (7, 8); weight: 5, Queen: 2; position: (4, 6); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=147, heuristic=0, id=1, sorted_queens=((2, 1), (4, 6), (4, 6), (7, 2), (7, 4), (7, 5), (7, 7), (7, 8)), queens=[Queen: 0; position: (2, 1); weight: 4, Queen: 1; position: (7, 2); weight: 5, Queen: 3; position: (7, 4); weight: 9, Queen: 4; position: (7, 5); weight: 7, Queen: 5; position: (4, 6); weight: 7, Queen: 6; position: (7, 7); weight: 4, Queen: 7; position: (7, 8); weight: 5, Queen: 2; position: (4, 6); weight: 7], board=<__main__.Board object at 0x7f05ff206c90>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=4, id=0, sorted_queens=((2, 1), (4, 3), (4, 6), (7, 2), (7, 4), (7, 5), (7, 7), (7, 8)), queens=[Queen: 0; position: (2, 1); weight: 4, Queen: 1; position: (7, 2); weight: 5, Queen: 2; position: (4, 3); weight: 7, Queen: 3; position: (7, 4); weight: 9, Queen: 4; position: (7, 5); weight: 7, Queen: 5; position: (4, 6); weight: 7, Queen: 6; position: (7, 7); weight: 4, Queen: 7; position: (7, 8); weight: 5], board=<__main__.Board object at 0x7f05ff5264d0>)


Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.044048309326171875; Cost: 147; Heuristic_score: 0; Depth: 1; Effective_Branching: 1.0; Nodes_Processed: 1
Solution_Queens: [Queen: 0; position: (2, 1); weight: 4, Queen: 1; position: (7, 2); weight: 5, Queen: 3; position: (7, 4); weight: 9, Queen: 4; position: (7, 5); weight: 7, Queen: 5; position: (4, 6); weight: 7, Queen: 6; position: (7, 7); weight: 4, Queen: 7; position: (7, 8); weight: 5, Queen: 2; position: (4, 6); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=147, heuristic=0, id=1, sorted_queens=((2, 1), (4, 6), (4, 6), (7, 2), (7, 4), (7, 5), (7, 7), (7, 8)), queens=[Queen: 0; position: (2, 1); weight: 4, Queen: 1; position: (7, 2); weight: 5, Queen: 3; position: (7, 4); weight: 9, Queen: 4; position: (7, 5); weight: 7, Queen: 5; position: (4, 6); weight: 7, Queen: 6; position: (7, 7); weight: 4, Queen: 7; position: (7, 8); weight: 5, Queen: 2; position: (4, 6); weight: 7], board=<__main__.Board object at 0x7f05ff541490>)
Move Number: 1: PrioritizedNode(cost=0, heuristic=16, id=0, sorted_queens=((2, 1), (4, 3), (4, 6), (7, 2), (7, 4), (7, 5), (7, 7), (7, 8)), queens=[Queen: 0; position: (2, 1); weight: 4, Queen: 1; position: (7, 2); weight: 5, Queen: 2; position: (4, 3); weight: 7, Queen: 3; position: (7, 4); weight: 9, Queen: 4; position: (7, 5); weight: 7, Queen: 5; position: (4, 6); weight: 7, Queen: 6; position: (7, 7); weight: 4, Queen: 7; position: (7, 8); weight: 5], board=<__main__.Board object at 0x7f05ff5264d0>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.407399415969849;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.17958736419677734; Cost: 336; Heuristic_score: 0; Depth: 4; Effective_Branching: 1.3195079107728942; Nodes_Processed: 4
Solution_Queens: [Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (4, 3); weight: 9, Queen: 4; position: (1, 5); weight: 5, Queen: 7; position: (1, 8); weight: 7, Queen: 3; position: (5, 7); weight: 7, Queen: 5; position: (7, 4); weight: 7, Queen: 6; position: (8, 6); weight: 4, Queen: 0; position: (7, 4); weight: 5]
Solution_Order: Move Number: 0: PrioritizedNode(cost=336, heuristic=0, id=4, sorted_queens=((1, 5), (1, 8), (4, 3), (5, 7), (6, 2), (7, 4), (7, 4), (8, 6)), queens=[Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (4, 3); weight: 9, Queen: 4; position: (1, 5); weight: 5, Queen: 7; position: (1, 8); weight: 7, Queen: 3; position: (5, 7); weight: 7, Queen: 5; position: (7, 4); weight: 7, Queen: 6; position: (8, 6); weight: 4, Queen: 0; position: (7, 4); weight: 5], board=<__main__.Board object at 0x7f05ff4dd450>)
Move Number: 1: PrioritizedNode(cost=261, heuristic=9, id=3, sorted_queens=((1, 5), (1, 8), (4, 3), (5, 7), (6, 2), (7, 1), (7, 4), (8, 6)), queens=[Queen: 0; position: (7, 1); weight: 5, Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (4, 3); weight: 9, Queen: 4; position: (1, 5); weight: 5, Queen: 7; position: (1, 8); weight: 7, Queen: 3; position: (5, 7); weight: 7, Queen: 5; position: (7, 4); weight: 7, Queen: 6; position: (8, 6); weight: 4], board=<__main__.Board object at 0x7f05ff549210>)
Move Number: 2: PrioritizedNode(cost=245, heuristic=41, id=2, sorted_queens=((1, 5), (1, 8), (4, 3), (5, 7), (6, 2), (7, 1), (7, 4), (8, 7)), queens=[Queen: 0; position: (7, 1); weight: 5, Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (4, 3); weight: 9, Queen: 4; position: (1, 5); weight: 5, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (1, 8); weight: 7, Queen: 3; position: (5, 7); weight: 7, Queen: 5; position: (7, 4); weight: 7], board=<__main__.Board object at 0x7f05ff5498d0>)
Move Number: 3: PrioritizedNode(cost=147, heuristic=106, id=1, sorted_queens=((1, 5), (1, 8), (4, 3), (5, 7), (6, 2), (7, 1), (7, 6), (8, 7)), queens=[Queen: 0; position: (7, 1); weight: 5, Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (4, 3); weight: 9, Queen: 4; position: (1, 5); weight: 5, Queen: 5; position: (7, 6); weight: 7, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (1, 8); weight: 7, Queen: 3; position: (5, 7); weight: 7], board=<__main__.Board object at 0x7f05ff4dd150>)
Move Number: 4: PrioritizedNode(cost=0, heuristic=253, id=0, sorted_queens=((1, 5), (1, 8), (4, 3), (5, 4), (6, 2), (7, 1), (7, 6), (8, 7)), queens=[Queen: 0; position: (7, 1); weight: 5, Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (4, 3); weight: 9, Queen: 3; position: (5, 4); weight: 7, Queen: 4; position: (1, 5); weight: 5, Queen: 5; position: (7, 6); weight: 7, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (1, 8); weight: 7], board=<__main__.Board object at 0x7f060d11f990>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.464144468307495;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.13538527488708496; Cost: 242; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (4, 4); weight: 3, Queen: 4; position: (8, 5); weight: 6, Queen: 6; position: (4, 7); weight: 2, Queen: 7; position: (1, 8); weight: 5, Queen: 0; position: (4, 4); weight: 8, Queen: 2; position: (6, 1); weight: 4, Queen: 5; position: (1, 8); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=242, heuristic=0, id=3, sorted_queens=((1, 2), (1, 8), (1, 8), (4, 4), (4, 7), (4, 4), (6, 1), (8, 5)), queens=[Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (4, 4); weight: 3, Queen: 4; position: (8, 5); weight: 6, Queen: 6; position: (4, 7); weight: 2, Queen: 7; position: (1, 8); weight: 5, Queen: 0; position: (4, 4); weight: 8, Queen: 2; position: (6, 1); weight: 4, Queen: 5; position: (1, 8); weight: 3], board=<__main__.Board object at 0x7f05fef20650>)
Move Number: 1: PrioritizedNode(cost=224, heuristic=9, id=2, sorted_queens=((1, 2), (1, 6), (1, 8), (4, 4), (4, 7), (4, 4), (6, 1), (8, 5)), queens=[Queen: 1; position: (1, 2); weight: 1, Queen: 3; position: (4, 4); weight: 3, Queen: 4; position: (8, 5); weight: 6, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (4, 7); weight: 2, Queen: 7; position: (1, 8); weight: 5, Queen: 0; position: (4, 4); weight: 8, Queen: 2; position: (6, 1); weight: 4], board=<__main__.Board object at 0x7f05ff1627d0>)
Move Number: 2: PrioritizedNode(cost=192, heuristic=32, id=1, sorted_queens=((1, 2), (1, 6), (1, 8), (4, 4), (4, 7), (4, 4), (6, 3), (8, 5)), queens=[Queen: 1; position: (1, 2); weight: 1, Queen: 2; position: (6, 3); weight: 4, Queen: 3; position: (4, 4); weight: 3, Queen: 4; position: (8, 5); weight: 6, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (4, 7); weight: 2, Queen: 7; position: (1, 8); weight: 5, Queen: 0; position: (4, 4); weight: 8], board=<__main__.Board object at 0x7f05fef20590>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=84, id=0, sorted_queens=((1, 2), (1, 6), (1, 8), (4, 1), (4, 4), (4, 7), (6, 3), (8, 5)), queens=[Queen: 0; position: (4, 1); weight: 8, Queen: 1; position: (1, 2); weight: 1, Queen: 2; position: (6, 3); weight: 4, Queen: 3; position: (4, 4); weight: 3, Queen: 4; position: (8, 5); weight: 6, Queen: 5; position: (1, 6); weight: 3, Queen: 6; position: (4, 7); weight: 2, Queen: 7; position: (1, 8); weight: 5], board=<__main__.Board object at 0x7f05ff549a50>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.053323745727539;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.35929417610168457; Cost: 262; Heuristic_score: 0; Depth: 8; Effective_Branching: 1.2599210498948732; Nodes_Processed: 8
Solution_Queens: [Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2, Queen: 0; position: (8, 3); weight: 2, Queen: 5; position: (5, 8); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=262, heuristic=0, id=8, sorted_queens=((1, 1), (2, 7), (3, 5), (3, 5), (5, 2), (5, 8), (6, 4), (8, 3)), queens=[Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2, Queen: 0; position: (8, 3); weight: 2, Queen: 5; position: (5, 8); weight: 3], board=<__main__.Board object at 0x7f05ff254ad0>)
Move Number: 1: PrioritizedNode(cost=244, heuristic=4, id=7, sorted_queens=((1, 1), (2, 7), (3, 5), (3, 5), (5, 2), (5, 6), (6, 4), (8, 3)), queens=[Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2, Queen: 0; position: (8, 3); weight: 2], board=<__main__.Board object at 0x7f05ff2545d0>)
Move Number: 2: PrioritizedNode(cost=224, heuristic=4, id=6, sorted_queens=((1, 1), (2, 7), (3, 5), (3, 5), (5, 2), (5, 6), (6, 4), (8, 8)), queens=[Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2, Queen: 0; position: (8, 8); weight: 2], board=<__main__.Board object at 0x7f05ff250f50>)
Move Number: 3: PrioritizedNode(cost=220, heuristic=4, id=5, sorted_queens=((1, 1), (2, 7), (3, 5), (3, 5), (5, 2), (5, 6), (6, 4), (8, 7)), queens=[Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2, Queen: 0; position: (8, 7); weight: 2], board=<__main__.Board object at 0x7f05ff2547d0>)
Move Number: 4: PrioritizedNode(cost=208, heuristic=4, id=4, sorted_queens=((1, 1), (2, 7), (3, 5), (3, 5), (5, 2), (5, 6), (6, 4), (8, 4)), queens=[Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2, Queen: 0; position: (8, 4); weight: 2], board=<__main__.Board object at 0x7f05ff254f50>)
Move Number: 5: PrioritizedNode(cost=196, heuristic=8, id=3, sorted_queens=((1, 1), (2, 7), (3, 5), (3, 5), (5, 2), (5, 6), (6, 4), (8, 1)), queens=[Queen: 0; position: (8, 1); weight: 2, Queen: 1; position: (5, 2); weight: 8, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8, Queen: 3; position: (3, 5); weight: 2], board=<__main__.Board object at 0x7f05ff254cd0>)
Move Number: 6: PrioritizedNode(cost=192, heuristic=20, id=2, sorted_queens=((1, 1), (2, 7), (3, 4), (3, 5), (5, 2), (5, 6), (6, 4), (8, 1)), queens=[Queen: 0; position: (8, 1); weight: 2, Queen: 1; position: (5, 2); weight: 8, Queen: 3; position: (3, 4); weight: 2, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4, Queen: 2; position: (1, 1); weight: 8], board=<__main__.Board object at 0x7f05ff2541d0>)
Move Number: 7: PrioritizedNode(cost=64, heuristic=32, id=1, sorted_queens=((1, 3), (2, 7), (3, 4), (3, 5), (5, 2), (5, 6), (6, 4), (8, 1)), queens=[Queen: 0; position: (8, 1); weight: 2, Queen: 1; position: (5, 2); weight: 8, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (3, 4); weight: 2, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 4); weight: 4], board=<__main__.Board object at 0x7f05ff250f90>)
Move Number: 8: PrioritizedNode(cost=0, heuristic=60, id=0, sorted_queens=((1, 3), (2, 7), (3, 4), (3, 5), (5, 2), (5, 6), (6, 8), (8, 1)), queens=[Queen: 0; position: (8, 1); weight: 2, Queen: 1; position: (5, 2); weight: 8, Queen: 2; position: (1, 3); weight: 8, Queen: 3; position: (3, 4); weight: 2, Queen: 4; position: (3, 5); weight: 4, Queen: 5; position: (5, 6); weight: 3, Queen: 6; position: (2, 7); weight: 6, Queen: 7; position: (6, 8); weight: 4], board=<__main__.Board object at 0x7f05ff1e4910>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.063978672027588;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.22054719924926758; Cost: 375; Heuristic_score: 0; Depth: 5; Effective_Branching: 1.3076604860118306; Nodes_Processed: 5
Solution_Queens: [Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 6; position: (6, 7); weight: 5, Queen: 2; position: (4, 4); weight: 9, Queen: 5; position: (7, 3); weight: 5, Queen: 4; position: (6, 8); weight: 7, Queen: 3; position: (3, 6); weight: 3, Queen: 7; position: (5, 2); weight: 3]
Solution_Order: Move Number: 0: PrioritizedNode(cost=375, heuristic=0, id=5, sorted_queens=((2, 1), (3, 6), (4, 4), (5, 2), (5, 2), (6, 7), (6, 8), (7, 3)), queens=[Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 6; position: (6, 7); weight: 5, Queen: 2; position: (4, 4); weight: 9, Queen: 5; position: (7, 3); weight: 5, Queen: 4; position: (6, 8); weight: 7, Queen: 3; position: (3, 6); weight: 3, Queen: 7; position: (5, 2); weight: 3], board=<__main__.Board object at 0x7f05fef727d0>)
Move Number: 1: PrioritizedNode(cost=321, heuristic=27, id=4, sorted_queens=((2, 1), (3, 6), (4, 4), (5, 2), (5, 8), (6, 7), (6, 8), (7, 3)), queens=[Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 6; position: (6, 7); weight: 5, Queen: 7; position: (5, 8); weight: 3, Queen: 2; position: (4, 4); weight: 9, Queen: 5; position: (7, 3); weight: 5, Queen: 4; position: (6, 8); weight: 7, Queen: 3; position: (3, 6); weight: 3], board=<__main__.Board object at 0x7f05ff428110>)
Move Number: 2: PrioritizedNode(cost=303, heuristic=45, id=3, sorted_queens=((2, 1), (3, 4), (4, 4), (5, 2), (5, 8), (6, 7), (6, 8), (7, 3)), queens=[Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 3; position: (3, 4); weight: 3, Queen: 6; position: (6, 7); weight: 5, Queen: 7; position: (5, 8); weight: 3, Queen: 2; position: (4, 4); weight: 9, Queen: 5; position: (7, 3); weight: 5, Queen: 4; position: (6, 8); weight: 7], board=<__main__.Board object at 0x7f05fef72750>)
Move Number: 3: PrioritizedNode(cost=156, heuristic=72, id=2, sorted_queens=((2, 1), (3, 4), (4, 4), (5, 2), (5, 8), (6, 5), (6, 7), (7, 3)), queens=[Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 3; position: (3, 4); weight: 3, Queen: 4; position: (6, 5); weight: 7, Queen: 6; position: (6, 7); weight: 5, Queen: 7; position: (5, 8); weight: 3, Queen: 2; position: (4, 4); weight: 9, Queen: 5; position: (7, 3); weight: 5], board=<__main__.Board object at 0x7f05fef72090>)
Move Number: 4: PrioritizedNode(cost=81, heuristic=156, id=1, sorted_queens=((2, 1), (3, 4), (4, 4), (5, 2), (5, 8), (6, 5), (6, 7), (7, 6)), queens=[Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 3; position: (3, 4); weight: 3, Queen: 4; position: (6, 5); weight: 7, Queen: 5; position: (7, 6); weight: 5, Queen: 6; position: (6, 7); weight: 5, Queen: 7; position: (5, 8); weight: 3, Queen: 2; position: (4, 4); weight: 9], board=<__main__.Board object at 0x7f05fef72150>)
Move Number: 5: PrioritizedNode(cost=0, heuristic=302, id=0, sorted_queens=((2, 1), (3, 4), (4, 3), (5, 2), (5, 8), (6, 5), (6, 7), (7, 6)), queens=[Queen: 0; position: (2, 1); weight: 6, Queen: 1; position: (5, 2); weight: 6, Queen: 2; position: (4, 3); weight: 9, Queen: 3; position: (3, 4); weight: 3, Queen: 4; position: (6, 5); weight: 7, Queen: 5; position: (7, 6); weight: 5, Queen: 6; position: (6, 7); weight: 5, Queen: 7; position: (5, 8); weight: 3], board=<__main__.Board object at 0x7f05fef43d10>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.211980104446411;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.0848844051361084; Cost: 36; Heuristic_score: 0; Depth: 2; Effective_Branching: 1.2599210498948732; Nodes_Processed: 2
Solution_Queens: [Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (8, 4); weight: 4, Queen: 4; position: (1, 5); weight: 5, Queen: 5; position: (4, 6); weight: 8, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (8, 8); weight: 6, Queen: 1; position: (3, 1); weight: 4, Queen: 0; position: (4, 6); weight: 2]
Solution_Order: Move Number: 0: PrioritizedNode(cost=36, heuristic=0, id=2, sorted_queens=((1, 5), (2, 3), (3, 1), (4, 6), (4, 6), (8, 4), (8, 7), (8, 8)), queens=[Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (8, 4); weight: 4, Queen: 4; position: (1, 5); weight: 5, Queen: 5; position: (4, 6); weight: 8, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (8, 8); weight: 6, Queen: 1; position: (3, 1); weight: 4, Queen: 0; position: (4, 6); weight: 2], board=<__main__.Board object at 0x7f05ff03c290>)
Move Number: 1: PrioritizedNode(cost=16, heuristic=8, id=1, sorted_queens=((1, 5), (2, 3), (3, 1), (4, 1), (4, 6), (8, 4), (8, 7), (8, 8)), queens=[Queen: 0; position: (4, 1); weight: 2, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (8, 4); weight: 4, Queen: 4; position: (1, 5); weight: 5, Queen: 5; position: (4, 6); weight: 8, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (8, 8); weight: 6, Queen: 1; position: (3, 1); weight: 4], board=<__main__.Board object at 0x7f05ff014a50>)
Move Number: 2: PrioritizedNode(cost=0, heuristic=40, id=0, sorted_queens=((1, 5), (2, 3), (3, 2), (4, 1), (4, 6), (8, 4), (8, 7), (8, 8)), queens=[Queen: 0; position: (4, 1); weight: 2, Queen: 1; position: (3, 2); weight: 4, Queen: 2; position: (2, 3); weight: 5, Queen: 3; position: (8, 4); weight: 4, Queen: 4; position: (1, 5); weight: 5, Queen: 5; position: (4, 6); weight: 8, Queen: 6; position: (8, 7); weight: 4, Queen: 7; position: (8, 8); weight: 6], board=<__main__.Board object at 0x7f05ff1e4910>)

--------------Trial----------------
Algorithm: hill_climb; Heuristic: HeuristicOne; True_result: False; Number of queens: 8; Runtime: 10.328094482421875;

Algorithm: hill_climb; Heuristic: HeuristicTwo; True_result: True; Number of queens: 8; Runtime: 0.13013195991516113; Cost: 172; Heuristic_score: 0; Depth: 3; Effective_Branching: 1.3160740129524924; Nodes_Processed: 3
Solution_Queens: [Queen: 0; position: (7, 1); weight: 6, Queen: 2; position: (6, 3); weight: 6, Queen: 3; position: (8, 4); weight: 6, Queen: 4; position: (5, 5); weight: 1, Queen: 5; position: (7, 6); weight: 1, Queen: 1; position: (6, 3); weight: 3, Queen: 7; position: (8, 4); weight: 2, Queen: 6; position: (8, 4); weight: 7]
Solution_Order: Move Number: 0: PrioritizedNode(cost=172, heuristic=0, id=3, sorted_queens=((5, 5), (6, 3), (6, 3), (7, 1), (7, 6), (8, 4), (8, 4), (8, 4)), queens=[Queen: 0; position: (7, 1); weight: 6, Queen: 2; position: (6, 3); weight: 6, Queen: 3; position: (8, 4); weight: 6, Queen: 4; position: (5, 5); weight: 1, Queen: 5; position: (7, 6); weight: 1, Queen: 1; position: (6, 3); weight: 3, Queen: 7; position: (8, 4); weight: 2, Queen: 6; position: (8, 4); weight: 7], board=<__main__.Board object at 0x7f05ff12ecd0>)
Move Number: 1: PrioritizedNode(cost=25, heuristic=1, id=2, sorted_queens=((5, 5), (6, 3), (6, 3), (7, 1), (7, 6), (8, 4), (8, 7), (8, 4)), queens=[Queen: 0; position: (7, 1); weight: 6, Queen: 2; position: (6, 3); weight: 6, Queen: 3; position: (8, 4); weight: 6, Queen: 4; position: (5, 5); weight: 1, Queen: 5; position: (7, 6); weight: 1, Queen: 6; position: (8, 7); weight: 7, Queen: 1; position: (6, 3); weight: 3, Queen: 7; position: (8, 4); weight: 2], board=<__main__.Board object at 0x7f05ff139e10>)
Move Number: 2: PrioritizedNode(cost=9, heuristic=2, id=1, sorted_queens=((5, 5), (6, 3), (6, 3), (7, 1), (7, 6), (8, 4), (8, 7), (8, 8)), queens=[Queen: 0; position: (7, 1); weight: 6, Queen: 2; position: (6, 3); weight: 6, Queen: 3; position: (8, 4); weight: 6, Queen: 4; position: (5, 5); weight: 1, Queen: 5; position: (7, 6); weight: 1, Queen: 6; position: (8, 7); weight: 7, Queen: 7; position: (8, 8); weight: 2, Queen: 1; position: (6, 3); weight: 3], board=<__main__.Board object at 0x7f05ff139e90>)
Move Number: 3: PrioritizedNode(cost=0, heuristic=20, id=0, sorted_queens=((5, 5), (6, 2), (6, 3), (7, 1), (7, 6), (8, 4), (8, 7), (8, 8)), queens=[Queen: 0; position: (7, 1); weight: 6, Queen: 1; position: (6, 2); weight: 3, Queen: 2; position: (6, 3); weight: 6, Queen: 3; position: (8, 4); weight: 6, Queen: 4; position: (5, 5); weight: 1, Queen: 5; position: (7, 6); weight: 1, Queen: 6; position: (8, 7); weight: 7, Queen: 7; position: (8, 8); weight: 2], board=<__main__.Board object at 0x7f05fef43d10>)

